user www-data;
worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*;

events {
  worker_connections 1024;
}

stream {
  upstream postgres_conns {
    server postgres:5432;
  }

  upstream redis_conns {
    server redis:6379;
  }
  server {
    listen          5432 so_keepalive=on;
    proxy_pass      postgres_conns;
  }

  server {
    listen          6379 so_keepalive=on;
    proxy_pass      redis_conns;
  }
}


http {
  ##
  # Basic Settings
  ##
  sendfile on;
  tcp_nopush on;
  tcp_nodelay on;
  keepalive_timeout 65;
  types_hash_max_size 2048;
  client_max_body_size 100M;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;

  ##
  # SSL Settings
  ##
  ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3; # Dropping SSLv3, ref: POODLE
  ssl_prefer_server_ciphers on;

  ##
  # Logging Settings
  ##
  access_log /var/log/nginx/access.log;
  error_log /var/log/nginx/error.log;

  ##
  # Gzip Settings
  ##
  gzip on;

  # Enchiridion API
  server {
          listen 80;
          listen [::]:80;

          server_name enchiridion.stevenhansel.com;
          server_tokens off;

          location /.well-known/acme-challenge/ {
                  root /var/www/certbot;
          }

          location / {
                  return 301 https://enchiridion.stevenhansel.com$request_uri;
          }
  }

  server {
    listen 443 default_server ssl http2;
    listen [::]:443 ssl http2;

    server_name enchiridion.stevenhansel.com;

    ssl_certificate /etc/nginx/ssl/live/enchiridion.stevenhansel.com/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/live/enchiridion.stevenhansel.com/privkey.pem;

    location ^~ /hooks {
      proxy_pass http://webhook:9000;
      proxy_set_header Host $host;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Real-IP $remote_addr;
    }

    location / {
      proxy_pass http://api:8080;

      proxy_cache_bypass $http_upgrade;

      proxy_set_header Host $host;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection 'upgrade';
      proxy_set_header X-Real-IP $remote_addr;
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header X-Forwarded-Proto $scheme;
    }
  }

  include /etc/nginx/conf.d/*.conf;
}
