version: '3.8'
services:
  postgres:
    container_name: postgres
    image: postgres
    restart: unless-stopped
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=$POSTGRES_DB
      - POSTGRES_USER=$POSTGRES_USER
      - POSTGRES_PASSWORD=$POSTGRES_PASSWORD
      - POSTGRES_HOST_AUTH_METHOD=trust

  redis:
    container_name: redis
    image: redis
    restart: unless-stopped
    command: "--requirepass ${REDIS_PASS} --bind 0.0.0.0 --tcp-keepalive 60"
    volumes:
      - ./data/redis:/data

  webhook:
    container_name: webhook
    image: almir/webhook
    restart: unless-stopped
    command: "-verbose --hooks=/etc/webhooks/hooks.json"
    volumes:
      - ./webhook:/etc/webhook

  nginx:
    container_name: nginx
    image: nginx
    restart: unless-stopped
    ports:
      - 80:80
      - 443:443
      - 5432:5432
      - 6379:6379
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./certbot/www:/var/www/certbot:ro
      - ./certbot/conf:/etc/nginx/ssl:ro

  certbot:
    container_name: certbot
    image: certbot/certbot:latest
    command: "certonly --webroot --webroot-path /var/www/certbot --email stevenhanselgo@gmail.com --agree-tos -d enchiridion.stevenhansel.com"
    volumes:
      - ./certbot/www:/var/www/certbot
      - ./certbot/conf:/etc/letsencrypt

  api:
    container_name: api
    image: ghcr.io/stevenhansel/enchiridion-api:latest
    command: "web"
    restart: unless-stopped
    volumes:
      - ./tmp:/app/tmp
    env_file:
      - app.env

  announcement_scheduler:
    container_name: announcement_scheduler
    image: ghcr.io/stevenhansel/enchiridion-api:latest
    command: "announcement_scheduler"
    restart: unless-stopped
    env_file:
      - app.env
